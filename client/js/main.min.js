function Client(a,b){this.host=a,this.port=b,this.connection=new ConnectionManager(this.host,this.port),this.socket=this.connection.socket}function ConnectionManager(a,b){this.host=a,this.port=b,this.tries=0,this.sessionID=Math.floor(1e9*Math.random()),this.connect(this.host,this.port),this.connectionStatus=""}Client.prototype={constructor:Client,subscribe:function(a){var b=this,c=JSON.stringify({event:"channel-subscribe",channel_name:a,session_id:this.connection.sessionID}),d=this.connection.getConnectionState();"connected"==d?this.socket.send(c):setTimeout(function(){b.socket.send(c)},1e3)}},ConnectionManager.prototype={constructor:ConnectionManager,limits:{time:5e3,bound:5},connect:function(a,b){var c=this,d="ws://"+a+":"+b;try{this.connectionStatus="connecting",this.socket=new WebSocket(d),this.socket.onopen=function(){this.connectionStatus="connected",console.log("Socket opened. Session ID: "+c.sessionID),c.tries=0},this.socket.onmessage=function(a){console.log(a.data)},this.socket.onclose=function(){this.connectionStatus="closed",console.log("Connection closed by host."),console.log("Retrying in "+c.limits.time/1e3+" seconds."),c.tries<c.limits.bound?(c.tries++,console.log("Attempt "+c.tries+" - Retrying..."),c.retryConnection()):console.log("Max retries reached.")},this.socket.onerror=function(){console.error("Unidentified WebSocket error.")}}catch(e){console.log("Unexpected WebSocket error."+e)}},retryConnection:function(){var a=this;setTimeout(function(){a.connect(a.host,a.port)},a.limits.time)},getConnectionState:function(){return this.connectionStatus}};